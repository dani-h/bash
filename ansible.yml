- hosts: localhost
  vars:
    symlink_dir: '{{ playbook_dir }}/conf'

  tasks:
  - name: Install apt packages
    become: true
    apt:
      name: '{{ item }}'
    with_items:
      - zsh
      - git
      - curl
      - openvpn
      - taskwarrior
      - parcellite
      - tmux
      - silversearcher-ag
      - xclip
      - jq
      - git-extras
      - curl
      - sshfs
      - cmake
      - python-dev
      - build-essential
      - xdotool
      - wmctrl
      - colortest
      - vnstat
      - gparted
      - shellcheck
      - rofi
      - ranger
      - gnome-settings-daemon
      - apt-file
      - direnv
      - xautolock
      - caffeine
      - asciinema
      - variety
      - feh
      - speedtest-cli
      - i3
      - i3status
      - i3lock

  - name: Install docker
    shell:
      curl -fsSL get.docker.com | sh
    args:
      creates: /usr/bin/docker
    tags: docker

  - name: Add user to docker group
    become: true
    user:
      name: '{{ ansible_user_id }}'
      groups: docker
      append: true
    tags: docker

  - tags: nvim
    block:
    - name: Add neovim ppa
      apt_repository:
        repo: ppa:neovim-ppa/unstable
      become: true

    - name: Install neovim
      apt:
        name: neovim
        update_cache: yes
      become: true

    - name: Install neovim pip package
      pip:
        name: neovim

    - name: Create vim-plug parent directory
      file:
        path: '{{ ansible_env.HOME }}/.config/nvim/autoload'
        state: directory

    - name: Install vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: '{{ ansible_env.HOME }}/.config/nvim/autoload/plug.vim'
        mode: 0440


  - name: Install fzf
    tags: fzf
    block:
      - name: Clone fzf
        git:
          repo: 'https://github.com/junegunn/fzf.git'
          depth: 1
          dest: ~/.fzf
          accept_hostkey: true

      - name: fzf installation script
        shell: ~/.fzf/install --key-bindings --completion --no-update-rc

  - name: Install diff-so-fancy
    tags: diff-so-fancy
    block:
      - name: Install dependencies
        apt:
          name: '{{ item }}'
        become: true
        with_items:
          - perl-modules-5.26

      - name: Install diff-so-fancy
        get_url:
          url: https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/third_party/build_fatpack/diff-so-fancy
          dest: /usr/local/bin/diff-so-fancy
          mode: 0555
        become: true

  - name: Install gvm
    tags: gvm
    block:
      - name: Install dependencies
        become: true
        apt:
          name: '{{ item }}'
        with_items:
          - binutils
          - bison
          - gcc

      - name: Install gvm
        args:
          executable: /bin/bash
          creates: '{{ ansible_env.HOME }}/.gvm/bin/gvm'
        shell: |
          set -o pipefail
          url=https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer
          curl -s -S -L $url | bash

  - name: Install n (node version manager)
    tags: n
    block:
      - name: Install n
        args:
          creates: '{{ ansible_env.HOME }}/.n/bin/n'
        shell: |
          # https://github.com/mklement0/n-install#examples
          curl -L https://git.io/n-install | N_PREFIX=$HOME/.n bash -s -- -y lts


  - name: Install chrome
    tags: chrome
    become: true
    block:
      - name: Add chrome ppa key
        apt_key:
          url: https://dl.google.com/linux/linux_signing_key.pub

      - name: Add chrome ppa
        apt_repository:
          repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
          filename: 'google-chrome'

      - name: Install chrome
        apt:
          name: google-chrome-stable
          update_cache: yes

  - name: Install tldr
    tags: tldr
    become: true
    block:
      - name: Install tldr
        get_url:
          url: https://raw.githubusercontent.com/raylee/tldr/master/tldr
          dest: /usr/local/bin/tldr
          mode: 0555

  - name: Install alacritty
    tags: alacritty
    block:
      - name: Install dependencies
        apt:
          name: '{{ item }}'
        become: true
        with_items:
          - cmake
          - libfreetype6-dev
          - libfontconfig1-dev

      - name: Install rustup
        shell: curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path
        args:
          creates: ~/.cargo/bin/rustup

      - name: Clone alacritty
        register: alacritty_git
        git:
          repo: https://github.com/jwilm/alacritty.git
          depth: 1
          dest: ~/repos/alacritty
          update: yes

      - name: Install alacritty
        when: alacritty_git.changed
        environment:
          PATH: '{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.cargo/bin'
        args:
          creates: /usr/local/bin/alacritty
          chdir: ~/repos/alacritty
        shell: |
          set -e
          rustup override set stable
          rustup update stable
          cargo build --release --verbose
          sudo cp target/release/alacritty /usr/local/bin/


  - name: Install antibody
    tags: antibody
    block:
      - name: Install dependencies
        apt:
          name: curl

      - name: Install antibody
        become: true
        args:
          creates: /usr/local/bin/antibody
        shell: curl -sL https://git.io/antibody | bash -s

  - tags: i3-gaps
    block:
      - name: Install i3-gaps dependencies
        apt:
          name: '{{ item }}'
        with_items:
          - libxcb1-dev
          - libxcb-keysyms1-dev
          - libpango1.0-dev
          - libxcb-util0-dev
          - libxcb-icccm4-dev
          - libyajl-dev
          - libstartup-notification0-dev
          - libxcb-randr0-dev
          - libev-dev
          - libxcb-cursor-dev
          - libxcb-xinerama0-dev
          - libxcb-xkb-dev
          - libxkbcommon-dev
          - libxkbcommon-x11-dev
          - autoconf
          - libxcb-xrm0
          - libxcb-xrm-dev
          - automake

      - name: Clone i3-gaps
        git:
          repo: https://www.github.com/Airblader/i3
          dest: '{{ ansible_env.HOME }}/repos/i3-gaps'
        register: i3_gaps

      - name: Compile and install i3-gaps
        when:
          i3_gaps.before != i3_gaps.after
        args:
          chdir: '{{ ansible_env.HOME }}/repos/i3-gaps'
        shell: |
          autoreconf --force --install
          mkdir -p build && cd build/
          ../configure --prefix=/usr --sysconfdir=/etc --disable-sanitizers
          make
          sudo make install


  - name: Install i3 completions
    tags: i3-completions
    block:
      - name: Install dependencies
        apt:
          name: curl

      - name: Install i3-completions
        become: true
        get_url:
          url: https://raw.githubusercontent.com/cornerman/i3-completion/master/i3_completion.sh
          dest: /usr/local/bin/tldr
          mode: 0444

  - name: Create symlink parent directories
    tags: symlinks
    file:
      path: '{{ item }}'
      state: directory
    with_items:
      - '{{ ansible_env.HOME }}/.config/nvim'
      - '{{ ansible_env.HOME }}/.config/alacritty'
      - '{{ ansible_env.HOME }}/.config/git'
      - '{{ ansible_env.HOME }}/.i3'

  - name: Symlink config files
    tags: symlinks
    file:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      owner: '{{ ansible_user_id }}'
      group: '{{ ansible_user_id }}'
      state: link
      force: true
    with_items:
      - { src: '{{ symlink_dir }}/profile',          dest: '{{ ansible_env.HOME }}/.profile' }
      - { src: '{{ symlink_dir }}/inputrc',          dest: '{{ ansible_env.HOME }}/.inputrc' }
      - { src: '{{ symlink_dir }}/tmux.conf',        dest: '{{ ansible_env.HOME }}/.tmux.conf' }
      - { src: '{{ symlink_dir }}/sqliterc',         dest: '{{ ansible_env.HOME }}/.sqliterc' }
      - { src: '{{ symlink_dir }}/pylintrc',         dest: '{{ ansible_env.HOME }}/.pylintrc' }
      - { src: '{{ symlink_dir }}/pythonrc',         dest: '{{ ansible_env.HOME }}/.pythonrc' }
      - { src: '{{ symlink_dir }}/tern-config',      dest: '{{ ansible_env.HOME }}/.tern-config' }
      - { src: '{{ symlink_dir }}/agignore',         dest: '{{ ansible_env.HOME }}/.agignore' }
      - { src: '{{ symlink_dir }}/gitconfig',        dest: '{{ ansible_env.HOME }}/.gitconfig' }
      - { src: '{{ symlink_dir }}/global-gitignore', dest: '{{ ansible_env.HOME }}/.config/git/ignore' }
      - { src: '{{ symlink_dir }}/i3-config',        dest: '{{ ansible_env.HOME }}/.i3/config' }
      - { src: '{{ symlink_dir }}/Xresources',       dest: '{{ ansible_env.HOME }}/.Xresources' }
      - { src: '{{ symlink_dir }}/ginit.vim',        dest: '{{ ansible_env.HOME }}/.config/nvim/ginit.vim' }
      - { src: '{{ symlink_dir }}/alacritty.yml',    dest: '{{ ansible_env.HOME }}/.config/alacritty/alacritty.yml' }
      - { src: '{{ symlink_dir }}/zlogin',           dest: '{{ ansible_env.HOME }}/.zlogin' }
      - { src: '{{ playbook_dir }}/zshrc',           dest: '{{ ansible_env.HOME }}/.zshrc' }
      - { src: '{{ playbook_dir }}/bashrc',          dest: '{{ ansible_env.HOME }}/.bashrc' }
      - { src: '{{ playbook_dir }}/vimrc',           dest: '{{ ansible_env.HOME }}/.config/nvim/init.vim' }
      - { src: '{{ playbook_dir }}/pre-commit',      dest: '{{ playbook_dir }}/.git/hooks/pre-commit' }
