#------------------------------------------------------------------------------
# This line is 80 characters
#
# Tmux config file
#'
#
# With -t, the key bindings in key-table are listed; this may be one of:
# vi-edit
# vi-copy
# vi-choice
# emacs-edit
# emacs-copy.
# emacs-choice
#
# **Warning: The tmux tables seem to have specific commands to them, calling
# another tables command doesn't seem to work, e.g calling copy-mode from
	# vi-edit or paste-buffer from vi-edit doesn't work.
#
# In order to find currently mapped keys: tmux list-keys -t <table>, e.g
# tmux list-keys -t vi-copy
#
# For a comprehensive list of keys, grep through
# https://github.com/ThomasAdam/tmux/blob/master/mode-key.c
#
# bind -n indicates that no prefix key is used
# bind -r indicated that the key can be pressed multiple times without prefix
# bind -t ? <key-table>
# bind -c ? dfuck?
#------------------------------------------------------------------------------

# Unbind *all* keys, including default ones
unbind -a

# -------------------
# Tmux Plugins
# -------------------
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @copycat_file_search 'f'
set -g @copycat_git_special 'g'

# Init TPM
run '~/.tmux/plugins/tpm/tpm'

# -------------------
# Custom options
# -------------------
set-option -g prefix C-space
bind : command-prompt

#bind R source-file ~/.tmux.conf \; display-message "reloading conf..."
# Don't display messages as it masks errors!
bind R source-file ~/.tmux.conf

set -s escape-time 0
set -g mouse-resize-pane on
set -g mode-mouse on

# Statusbar on top
set-option -g status-position top
# Set currently active window to red
set-window-option -g window-status-current-bg red
# Vi opts
set-window-option -g mode-keys vi

# Copy paste to clipboard
#bind -n M-y run "tmux save-buffer - | xclip -i"
#bind y run "tmux save-buffer - | xclip -i"
#bind p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# Start visual mode
bind v copy-mode
# Visual mode in vi-copy
bind -t vi-copy v begin-selection

# Movement
bind -t vi-copy q previous-word
bind -t vi-copy Q start-of-line
bind -t vi-copy W end-of-line

bind C-k clear-history

# No prefix keys, just like window movement in Vi
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Window splits
bind . split-window -h # Split panes horizontal
bind - split-window -v # Split panes vertically

# Move windows
bind -r < swap-window -t :-
bind -r > swap-window -t :+

# Rename window
bind F12 command-prompt 'rename-window %%'

# Bunch of borrowed options, figure them out later
set-window-option -g window-status-current-bg colour166
set-window-option -g window-status-current-fg colour15
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-format ' #I #W '

set-option -g set-titles on
set-option -g set-titles-string '[#I] #W'
set-window-option -g automatic-rename on
set-window-option -g window-status-format ' #I #W '
set-window-option -g window-status-attr bold

# Number from one, easier on the fingers
set-window-option -g pane-base-index 1
set-option -g base-index 1

#set-option -g visual-activity on
#set-option -g visual-content on
#set-window-option -g monitor-activity on
#set-window-option -g automatic-rename off

#set-option -g pane-active-border-fg yellow
#set-option -g pane-border-fg white
# End borrowed options

